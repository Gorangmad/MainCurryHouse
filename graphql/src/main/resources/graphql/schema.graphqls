type Query {
  ordersByCustomer(customerUsername: String!): [Order!]! # Retrieve orders by customerUsername
  allOrders: [Order!]! # Retrieve all orders
  order(id: String!): Order
}

type Mutation {
    createOrder(input: OrderInput!): Order!
    updateOrderStatus(orderId: String!, newStatus: String!): Order
}

type Order {
  id: String!
  customerUsername: String!
  products: [OrderProduct!]!
  totalAmount: Float!
  status: String!
  createdAt: String!
  email: String
  address: String
  phoneNumber: String
  notes: String
}

type OrderProduct {
  productId: String!
  name: String
  quantity: Int!
  unitPrice: Float!
}

input OrderInput {
  customerUsername: String!
  email: String # Optional
  address: String # Optional
  phoneNumber: String # Optional
  notes: String # Optional
  products: [OrderProductInput!]!
}

input OrderProductInput {
  productId: String!
  quantity: Int!
  name: String # Optional
  unitPrice: Float # Optional
}

